package(default_visibility = ["//visibility:public"])

load("//build:compiler.bzl", "CXXOPTS")
load("//build:buildflag_header.bzl", "buildflag_header")

# Build flags for Control Flow Integrity, Only Supported On Clang
# https://www.chromium.org/developers/testing/control-flow-integrity
buildflag_header(
    name = "cfi_buildflags",
    flags = {
        # Enable checks for bad casts: derived cast and unrelated cast.
        # https://crbug.com/626794
        "CFI_CAST_CHECK": "false",
        # Enable checks for indirect function calls via a function pointer.
        # https://crbug.com/701919
        "CFI_ICALL_CHECK": "false",
        # Print detailed diagnostics when Control Flow Integrity detects a violation.
        "CFI_ENFORCEMENT_TRAP": "false",
        # Print detailed diagnostics when Control Flow Integrity detects a violation.
        "CFI_ENFORCEMENT_DIAGNOSTIC": "false",
    },
    header = "cfi_buildflags.h",
)

cc_library(
    name = "base",
    srcs = [
        "at_exit.cc",
        "barrier_closure.cc",
        "base64.cc",
        "base64url.cc",
        "base_paths.cc",
        "base_switches.cc",
        "big_endian.cc",
        "build_time.cc",
        "callback_helpers.cc",
        "callback_internal.cc",
        "command_line.cc",
        "cpu.cc",
        "deferred_sequenced_task_runner.cc",
        "environment.cc",
        "feature_list.cc",
        "file_descriptor_store.cc",
        "guid.cc",
        "hash.cc",
        "lazy_instance_helpers.cc",
        "location.cc",
        "logging.cc",
        "md5.cc",
        "native_library.cc",
        "observer_list_internal.cc",
        "observer_list_threadsafe.cc",
        "observer_list_types.cc",
        "path_service.cc",
        "pending_task.cc",
        "pickle.cc",
        "rand_util.cc",
        "run_loop.cc",
        "scoped_native_library.cc",
        "sequence_checker_impl.cc",
        "sequenced_task_runner.cc",
        "sequence_token.cc",
        "sha1.cc",
        "supports_user_data.cc",
        "sys_info.cc",
        "syslog_logging.cc",
        "task_runner.cc",
        "token.cc",
        "unguessable_token.cc",
        "value_conversions.cc",
        "value_iterators.cc",
        "values.cc",
        "version.cc",
        "vlog.cc",
        # Other Modules
        "//base/message_loop",
        "//base/posix",
        "//base/nix",
        "//base/process",
        "//base/numerics",
        "//base/sampling_heap_profiler",
        "//base/debug",
        "//base/threading",
        "//base/files",
        "//base/timer",
        "//base/metrics",
        "//base/profiler",
        "//base/time",
        "//base/allocator/partition_allocator",
        "//base/allocator",
        "//base/power_monitor",
        #"//base/i18n",
        "//base/trace_event",
        "//base/memory",
        "//base/third_party/icu",
        "//base/third_party/dmg_fp",
        "//base/task",
        "//base/json",
        "//base/synchronization",
        "//base/strings",
        "//base/system",
    ] + [
        # LINUX
        "base_paths_posix.cc",
        "linux_util.cc",
        "native_library_posix.cc",
        "rand_util_posix.cc",
        "sync_socket_posix.cc",
        "sys_info_linux.cc",
        "sys_info_posix.cc",
    ],
    hdrs = [
        "file_version_info.h",
        "hash.h",
        "guid.h",
        "callback_list.h",
        "lazy_instance_helpers.h",
        "bits.h",
        "base64url.h",
        "base_switches.h",
        "build_time.h",
        "rand_util.h",
        "atomic_sequence_num.h",
        "sha1.h",
        "sys_info.h",
        "file_descriptor_store.h",
        "export_template.h",
        "gtest_prod_util.h",
        "bind_helpers.h",
        "callback.h",
        "cancelable_callback.h",
        "native_library.h",
        "component_export.h",
        "task_runner.h",
        "scoped_generic.h",
        "sequenced_task_runner.h",
        "pickle.h",
        "observer_list.h",
        "post_task_and_reply_with_result_internal.h",
        "sequence_checker_impl.h",
        "callback_forward.h",
        "sync_socket.h",
        "single_thread_task_runner.h",
        "cpu.h",
        "bind_internal.h",
        "supports_user_data.h",
        "template_util.h",
        "token.h",
        "md5.h",
        "scoped_native_library.h",
        "atomicops_internals_atomicword_compat.h",
        "atomicops.h",
        "lazy_instance.h",
        "value_iterators.h",
        "thread_annotations.h",
        "scoped_observer.h",
        "format_macros.h",
        "run_loop.h",
        "critical_closure.h",
        "version.h",
        "bit_cast.h",
        "base64.h",
        "no_destructor.h",
        "macros.h",
        "values.h",
        "sequence_token.h",
        "sys_info_internal.h",
        "bind.h",
        "sequenced_task_runner_helpers.h",
        "value_conversions.h",
        "base_export.h",
        "task_runner_util.h",
        "observer_list_threadsafe.h",
        "big_endian.h",
        "pending_task.h",
        "barrier_closure.h",
        "callback_helpers.h",
        "observer_list_internal.h",
        "auto_reset.h",
        "scoped_clear_last_error.h",
        "base_paths.h",
        "syslog_logging.h",
        "unguessable_token.h",
        "atomicops_internals_portable.h",
        "sys_byteorder.h",
        "feature_list.h",
        "stl_util.h",
        "command_line.h",
        "atomic_ref_count.h",
        "logging.h",
        "observer_list_types.h",
        "optional.h",
        "deferred_sequenced_task_runner.h",
        "sequence_checker.h",
        "vlog.h",
        "environment.h",
        "tuple.h",
        "path_service.h",
        "callback_internal.h",
        "compiler_specific.h",
        "at_exit.h",
        "location.h",
        "generated_build_date.h",
        ":cfi_buildflags",
        # Other Modules
        "//base/message_loop:headers",
        "//base/posix:headers",
        "//base/nix:headers",
        "//base/process:headers",
        "//base/numerics:headers",
        "//base/sampling_heap_profiler:headers",
        "//base/debug:headers",
        "//base/threading:headers",
        "//base/files:headers",
        "//base/timer:headers",
        "//base/metrics:headers",
        "//base/profiler:headers",
        "//base/containers",
        "//base/time:headers",
        "//base/allocator/partition_allocator:headers",
        "//base/allocator:headers",
        "//base/power_monitor:headers",
        #"//base/i18n:headers",
        "//base/trace_event:headers",
        "//base/memory:headers",
        "//base/third_party/icu:headers",
        "//base/third_party/dmg_fp:headers",
        "//base/task:headers",
        "//base/json:headers",
        "//base/synchronization:headers",
        "//base/strings:headers",
        "//base/system:headers",
        "//base/test:clang_coverage_headers",
    ] + [
        # LINUX
        "linux_util.h",
        "base_paths_posix.h",
        "file_descriptor_posix.h",
    ],
    copts = CXXOPTS,
    linkstatic = True,
    #defines = [
    #    "UCHAR_TYPE=uint16_t",
    #],
    deps = [
        "//third_party/ced",
        "//third_party/dynamic_annotations",
        "//third_party/googletest:gtest",
        #"//third_party/icu:icui18n",
        #"//third_party/icu:icuuc",
        "//third_party/libevent",
        "//third_party/modp_b64",
        "//third_party/nspr",
        "//third_party/superfasthash",
        "//third_party/tcmalloc",
        "//third_party/xdg_mime",
        "//third_party/xdg_user_dirs",
    ],
)

cc_test(
    name = "unit_test",
    testonly = True,
    srcs = [
        "at_exit_unittest.cc",
        "atomicops_unittest.cc",
        "barrier_closure_unittest.cc",
        "base64_unittest.cc",
        "base64url_unittest.cc",
        "big_endian_unittest.cc",
        "bind_unittest.cc",
        "bit_cast_unittest.cc",
        "bits_unittest.cc",
        #"build_time_unittest.cc", # Fails because of hardcoded date
        "callback_helpers_unittest.cc",
        "callback_list_unittest.cc",
        "callback_unittest.cc",
        "cancelable_callback_unittest.cc",
        "command_line_unittest.cc",
        "component_export_unittest.cc",
        "cpu_unittest.cc",
        "deferred_sequenced_task_runner_unittest.cc",
        "environment_unittest.cc",
        "feature_list_unittest.cc",
        "gmock_unittest.cc",
        "guid_unittest.cc",
        "hash_unittest.cc",
        "lazy_instance_unittest.cc",
        "logging_unittest.cc",
        "md5_unittest.cc",
        "native_library_unittest.cc",
        "no_destructor_unittest.cc",
        "observer_list_threadsafe_unittest.cc",
        "observer_list_unittest.cc",
        "optional_unittest.cc",
        "path_service_unittest.cc",
        "pickle_unittest.cc",
        "rand_util_unittest.cc",
        "run_loop_unittest.cc",
        "safe_numerics_unittest.cc",
        "scoped_clear_last_error_unittest.cc",
        "scoped_generic_unittest.cc",
        "scoped_native_library_unittest.cc",
        "security_unittest.cc",
        "sequence_checker_unittest.cc",
        "sequence_token_unittest.cc",
        "sequenced_task_runner_unittest.cc",
        "sha1_unittest.cc",
        "stl_util_unittest.cc",
        "supports_user_data_unittest.cc",
        "sync_socket_unittest.cc",
        "sys_byteorder_unittest.cc",
        "sys_info_unittest.cc",
        "task_runner_util_unittest.cc",
        "template_util_unittest.cc",
        "token_unittest.cc",
        "tools_sanity_unittest.cc",
        "tuple_unittest.cc",
        "unguessable_token_unittest.cc",
        "value_iterators_unittest.cc",
        "values_unittest.cc",
        "version_unittest.cc",
        "vlog_unittest.cc",
        # Other Modules
        "//base/allocator:unit_test",
        "//base/allocator/partition_allocator:unit_test",
        "//base/containers:unit_test",
        "//base/debug:unit_test",
        "//base/files:unit_test",
        "//base/json:unit_test",
        "//base/memory:unit_test",
        "//base/message_loop:unit_test",
        "//base/metrics:unit_test",
        "//base/power_monitor:unit_test",
        "//base/process:unit_test",
        "//base/profiler:unit_test",
        "//base/sampling_heap_profiler:unit_test",
        "//base/strings:unit_test",
        "//base/synchronization:unit_test",
        "//base/system:unit_test",
        "//base/task:unit_test",
        "//base/test:unit_test",
        "//base/threading:unit_test",
        "//base/time:unit_test",
        "//base/timer:unit_test",
    ],
    copts = CXXOPTS,
    data = [
        # For native library unit test
        "//base/test:test_shared_library",
        # For elf reader unit test
        "//base/test:malloc_wrapper",
        # For process launcher tests
        "//base/test:test_child_process",
    ],
    defines = [
        "UNIT_TEST",
        "MALLOC_WRAPPER_LIB=\\\"libmalloc_wrapper.so\\\"",
        # TODO figure out a better way of handling this, as this will only run on my box
        "TEST_LOCALE=\\\"en_GB.UTF-8\\\"",
    ],
    deps = [
        ":base",
        "//base/test:test_support",
        "//build:build_config",
        "//testing",
        "//third_party/dynamic_annotations",
        "//third_party/libevent",
    ],
)
