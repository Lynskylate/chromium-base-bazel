package(default_visibility = ["//base:__subpackages__"])

load("//build:compiler.bzl", "CXXOPTS")

filegroup(
    name = "clang_coverage_headers",
    srcs = [
        "clang_coverage.h",
    ],
)

cc_library(
    name = "test_support",
    testonly = True,
    srcs = [
        #"fontconfig_util_linux.cc",
        "fuzzed_data_provider.cc",
        "gtest_util.cc",
        "gtest_xml_unittest_result_printer.cc",
        "gtest_xml_util.cc",
        "icu_test_util.cc",
        "launcher/test_launcher.cc",
        "launcher/test_launcher_tracer.cc",
        "launcher/test_result.cc",
        "launcher/test_results_tracker.cc",
        "launcher/unit_test_launcher.cc",
        "metrics/histogram_enum_reader.cc",
        "metrics/histogram_tester.cc",
        "metrics/user_action_tester.cc",
        "mock_devices_changed_observer.cc",
        "mock_entropy_provider.cc",
        "mock_log.cc",
        "multiprocess_test.cc",
        "null_task_runner.cc",
        "perf_log.cc",
        "perf_test_suite.cc",
        "perf_time_logger.cc",
        "power_monitor_test_base.cc",
        "scoped_command_line.cc",
        "scoped_environment_variable_override.cc",
        "scoped_feature_list.cc",
        "scoped_locale.cc",
        "scoped_mock_clock_override.cc",
        "scoped_mock_time_message_loop_task_runner.cc",
        "scoped_path_override.cc",
        "scoped_task_environment.cc",
        "sequenced_task_runner_test_template.cc",
        "simple_test_clock.cc",
        "simple_test_tick_clock.cc",
        "task_runner_test_template.cc",
        "test_discardable_memory_allocator.cc",
        "test_file_util.cc",
        "test_file_util_linux.cc",
        "test_file_util_posix.cc",
        "test_io_thread.cc",
        "test_message_loop.cc",
        "test_mock_time_task_runner.cc",
        "test_pending_task.cc",
        "test_shared_memory_util.cc",
        "test_simple_task_runner.cc",
        "test_suite.cc",
        "thread_test_helper.cc",
        "trace_event_analyzer.cc",
        "trace_to_file.cc",
        "values_test_util.cc",
        "test_switches.cc",
        "test_timeouts.cc",
        "native_library_test_utils.cc",
        "malloc_wrapper.cc",
        # Other Modules
        "//base/memory:test_support",
        "//base/task:test_support",
        "//base/timer:test_support",
    ] + [
        # Unit test runner
        "run_all_unittests.cc",
    ],
    hdrs = [
        "bind_test_util.h",
        "copy_only_int.h",
        #"fontconfig_util_linux.h",
        "fuzzed_data_provider.h",
        "gtest_util.h",
        "gtest_xml_unittest_result_printer.h",
        "gtest_xml_util.h",
        "icu_test_util.h",
        "launcher/test_launcher.h",
        "launcher/test_launcher_tracer.h",
        "launcher/test_result.h",
        "launcher/test_results_tracker.h",
        "launcher/unit_test_launcher.h",
        "metrics/histogram_enum_reader.h",
        "metrics/histogram_tester.h",
        "metrics/user_action_tester.h",
        "mock_callback.h",
        "mock_devices_changed_observer.h",
        "mock_entropy_provider.h",
        "mock_log.h",
        "move_only_int.h",
        "multiprocess_test.h",
        "null_task_runner.h",
        "perf_log.h",
        "perf_test_suite.h",
        "perf_time_logger.h",
        "power_monitor_test_base.h",
        "scoped_command_line.h",
        "scoped_environment_variable_override.h",
        "scoped_feature_list.h",
        "scoped_locale.h",
        "scoped_mock_clock_override.h",
        "scoped_mock_time_message_loop_task_runner.h",
        "scoped_path_override.h",
        "scoped_task_environment.h",
        "sequenced_task_runner_test_template.h",
        "simple_test_clock.h",
        "simple_test_tick_clock.h",
        "task_runner_test_template.h",
        "test_discardable_memory_allocator.h",
        "test_file_util.h",
        "test_io_thread.h",
        "test_message_loop.h",
        "test_mock_time_task_runner.h",
        "test_pending_task.h",
        "test_shared_memory_util.h",
        "test_simple_task_runner.h",
        "test_suite.h",
        "test_switches.h",
        "test_timeouts.h",
        "thread_test_helper.h",
        "trace_event_analyzer.h",
        "trace_to_file.h",
        "values_test_util.h",
        "native_library_test_utils.h",
        "malloc_wrapper.h",
        "//base/memory:test_support_headers",
        "//base/task:test_support_headers",
        "//base/timer:test_support_headers",
        "//base/trace_event:test_support_headers",
    ],
    copts = CXXOPTS,
    data = glob(["data/**/*"]),
    defines = [
        # TODO figure out a better way of handling this, as this will only run on my box
        "TEST_LOCALE=\\\"en_GB.UTF-8\\\"",
    ],
    linkopts = [
        "-ldl",
    ],
    linkstatic = True,
    deps = [
        "//base",
        "//base/i18n",
        "//build:build_config",
        "//testing",
        "//third_party/googletest:gtest",
        "//third_party/libxml",
    ],
)

# This shared library is dynamically loaded by NativeLibrary unittests.
cc_library(
    name = "test_shared_library",
    testonly = True,
    srcs = [
        "native_library_test_utils.cc",
        "test_shared_library.cc",
    ],
    hdrs = [
        "native_library_test_utils.h",
    ],
    deps = [
        "//base",
        "//build:build_config",
    ],
)

cc_library(
    name = "malloc_wrapper",
    # testonly = True,
    srcs = [
        "malloc_wrapper.cc",
    ],
    hdrs = [
        "malloc_wrapper.h",
    ],
    copts = CXXOPTS,
    linkopts = [
        "-Wl,-soname,libmalloc_wrapper.so",
    ],
    deps = [
        "//base",
    ],
)

# Trivial executable which outputs space-delimited argv to stdout,
# used for testing.
cc_binary(
    name = "test_child_process",
    srcs = [
        "test_child_process.cc",
    ],
    copts = CXXOPTS,
)

filegroup(
    name = "unit_test",
    srcs = [
        "metrics/histogram_enum_reader_unittest.cc",
        "metrics/histogram_tester_unittest.cc",
        "metrics/user_action_tester_unittest.cc",
        "mock_callback_unittest.cc",
        "scoped_feature_list_unittest.cc",
        "scoped_mock_clock_override_unittest.cc",
        "scoped_mock_time_message_loop_task_runner_unittest.cc",
        "scoped_task_environment_unittest.cc",
        "test_mock_time_task_runner_unittest.cc",
        "test_pending_task_unittest.cc",
        "trace_event_analyzer_unittest.cc",
    ],
)
